(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>d});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([e.id,"body, html{\n    padding: 0;\n    margin: 0;\n    display: grid;\n    width: 100vw;\n    height: 100vh;\n    align-content: space-between;\n    grid-template-rows: auto 1fr auto;\n    grid-template-columns: auto 1fr;\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    color: azure;\n}\nbutton{\n    cursor: pointer;\n}\n\n.logo{\n    font-size: 25px;\n    font-weight: 700;\n    padding: 20px;\n}\n\n#header{\n    background-color: rgb(167, 138, 138);\n    width: 100vw;\n    grid-column: 1/3;\n}\n\n#sidebar{\n    background-color: rgb(180, 165, 165);\n    padding: 20px;\n}\n\n#main-content{\n    color: black;\n    padding: 20px;\n    background-color: #373943;\n}\n\n.add-todo{\n    display: none;\n    flex-direction: column;\n    align-items: flex-start;\n}\n\n.add-project-form{\n    display: none;\n}\n\n#footer{\n    height: 100px;\n    width: 100vw;\n    background-color: rgb(167, 138, 138);\n    grid-column: 1/3;\n}\n\n.todo-task{\n    border: 1px solid rgb(41, 12, 12);\n    border-radius: 20px;\n    padding: 20px;\n    display: flex;\n    gap: 20px;\n    align-items: center;\n    background-color: beige;\n}\n\n.project-btn{\n    list-style: none;\n    font-weight: 500;\n    font-size: 18px;\n    cursor: pointer;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;IACT,aAAa;IACb,YAAY;IACZ,aAAa;IACb,4BAA4B;IAC5B,iCAAiC;IACjC,+BAA+B;IAC/B,mJAAmJ;IACnJ,YAAY;AAChB;AACA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,oCAAoC;IACpC,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,oCAAoC;IACpC,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,oCAAoC;IACpC,gBAAgB;AACpB;;AAEA;IACI,iCAAiC;IACjC,mBAAmB;IACnB,aAAa;IACb,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,eAAe;IACf,eAAe;AACnB",sourcesContent:["body, html{\r\n    padding: 0;\r\n    margin: 0;\r\n    display: grid;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    align-content: space-between;\r\n    grid-template-rows: auto 1fr auto;\r\n    grid-template-columns: auto 1fr;\r\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    color: azure;\r\n}\r\nbutton{\r\n    cursor: pointer;\r\n}\r\n\r\n.logo{\r\n    font-size: 25px;\r\n    font-weight: 700;\r\n    padding: 20px;\r\n}\r\n\r\n#header{\r\n    background-color: rgb(167, 138, 138);\r\n    width: 100vw;\r\n    grid-column: 1/3;\r\n}\r\n\r\n#sidebar{\r\n    background-color: rgb(180, 165, 165);\r\n    padding: 20px;\r\n}\r\n\r\n#main-content{\r\n    color: black;\r\n    padding: 20px;\r\n    background-color: #373943;\r\n}\r\n\r\n.add-todo{\r\n    display: none;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n}\r\n\r\n.add-project-form{\r\n    display: none;\r\n}\r\n\r\n#footer{\r\n    height: 100px;\r\n    width: 100vw;\r\n    background-color: rgb(167, 138, 138);\r\n    grid-column: 1/3;\r\n}\r\n\r\n.todo-task{\r\n    border: 1px solid rgb(41, 12, 12);\r\n    border-radius: 20px;\r\n    padding: 20px;\r\n    display: flex;\r\n    gap: 20px;\r\n    align-items: center;\r\n    background-color: beige;\r\n}\r\n\r\n.project-btn{\r\n    list-style: none;\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n}"],sourceRoot:""}]);const d=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(i[c]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);o&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),n.push(s))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},i=[],d=0;d<e.length;d++){var c=e[d],l=o.base?c[0]+o.base:c[0],s=a[l]||0,u="".concat(l," ").concat(s);a[l]=s+1;var p=t(u),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(A);else{var m=r(A,o);o.byIndex=d,n.splice(d,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var d=t(a[i]);n[d].references--}for(var c=o(e,r),l=0;l<a.length;l++){var s=t(a[l]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}a=c}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0;var o={};(()=>{t.d(o,{H:()=>O,d:()=>Y});var e=t(379),n=t.n(e),r=t(795),a=t.n(r),i=t(569),d=t.n(i),c=t(565),l=t.n(c),s=t(216),u=t.n(s),p=t(589),A=t.n(p),m=t(426),f={};f.styleTagTransform=A(),f.setAttributes=l(),f.insert=d().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=u(),n()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;const y=function(e){const n=document.querySelector(".project-list");n.innerHTML="",e.forEach((e=>{n.innerHTML+=`<li class="project-btn" id="project${e.id}">${e.name}</li>`}))},b=function(e,n){document.querySelector(".project-title").innerHTML=e;const t=document.querySelector(".todos");t.innerHTML="",n.forEach((e=>{if(!e.deleted){let n=document.createElement("div");n.classList.add("todo-task"),n.id=`todo${e.id}`,n.innerHTML+=`<input type="checkbox" id="checkbox${e.id}">`,n.innerHTML+=`<div class="todo-title" id="todo-title${e.id}">${e.title}</div>`,n.innerHTML+=`<p>${e.dueDate}</p>`,n.innerHTML+=`<div>${e.priority}</div>`,n.innerHTML+=`<button class="todo-delete-btn" id="deleteTodo${e.id}">X</button>`,t.appendChild(n),Y(),O()}}))},g=function(e,n,t,o,r,a){let i=r;return{title:e,description:n,dueDate:t,priority:o,markDone:()=>{i=!i},getDoneValue:()=>i,id:a,deleted:!1}},v=function(e,n,t){return{name:e,todos:n,id:t}};let h=[v("Daily",[g("Make dinner","prepare a nice smoked chicken","hola","High",!1,500),g("Masdnner","prepare a nice smoked chicken","hola","High",!1,540)],500)],C=h[0];!function(){const e=document.createElement("div");e.id="header",e.innerHTML='<div class="logo">To-do-List</div>';const n=document.createElement("div");n.id="sidebar",n.innerHTML='<h2>Projects</h2><button class="new-project-btn">New Project</button><div class="add-project-form"><input type="text" class="project-name-input" placeholder="Project name"><button class="add-project">+ Add</button><button class="cancel-project">Cancel</button></div>',n.innerHTML+='<div class="projects"><ul class="project-list"></ul></div>';const t=document.createElement("div");t.classList.add("add-todo"),t.innerHTML='<label for="title">Title:</label><input type="text" id="title" name="title" required>',t.innerHTML+='<label for="description">Description:</label><textarea id="description" name="description" required></textarea>',t.innerHTML+='<label for="dueDate">Due Date:</label><input type="date" id="dueDate" name="dueDate" required>',t.innerHTML+='<label for="priority">Priority:</label><select id="priority" name="priority"><option value="high">High</option><option value="medium">Medium</option><option value="low">Low</option></select>',t.innerHTML+='<button class="add">+ Add</button>',t.innerHTML+='<button class="cancel">Cancel</button>';const o=document.createElement("div");o.id="main-content",o.innerHTML+='<h2 class="project-title">List</h2>',o.appendChild(t),o.innerHTML+='<button class="btn-add-todo">Add To-do</button><div class="todos"></div>';const r=document.createElement("div");r.id="footer",document.body.appendChild(e),document.body.appendChild(n),document.body.appendChild(o),document.body.appendChild(r)}(),y(h),b(C.name,C.todos);const I=document.querySelector("#title"),x=document.querySelector("#description"),B=document.querySelector("#dueDate"),k=document.querySelector("#priority"),E=document.querySelector(".add"),L=document.querySelector(".btn-add-todo"),j=document.querySelector(".add-todo"),S=document.querySelector(".cancel"),T=document.querySelector(".new-project-btn"),w=document.querySelector(".add-project"),M=document.querySelector(".cancel-project"),H=document.querySelector(".add-project-form"),q=document.querySelector(".project-name-input");let D=0;E.addEventListener("click",(()=>{let e=g(I.value,x.value,B.value,k.value,!0,D);D++,C.todos.push(e),b(C.name,C.todos),j.style.display="none",L.style.display="block",I.value="",x.value="",B.value=""})),L.addEventListener("click",(()=>{j.style.display="flex",L.style.display="none"})),S.addEventListener("click",(()=>{j.style.display="none",L.style.display="block"})),T.addEventListener("click",(()=>{H.style.display="block",T.style.display="none"}));let N=0;function U(){document.querySelectorAll(".project-btn").forEach((e=>{e.addEventListener("click",(e=>{C=e.target.id,h.forEach((n=>{e.target.id.substring(7)==n.id&&(C=n)})),b(C.name,C.todos)}))}))}function Y(){document.querySelectorAll(".todo-delete-btn").forEach((e=>{e.addEventListener("click",(e=>{console.log("hola"),C.todos.forEach((n=>{e.target.id.substring(10)==n.id&&(n.deleted=!0),b(C.name,C.todos)}))}))}))}function O(){document.querySelectorAll(".todo-title").forEach((e=>{e.addEventListener("click",(e=>{C.todos.forEach((n=>{if(e.target.id.substring(10)==n.id){let t=document.createElement("input");t.value=e.target.textContent,e.target.parentNode.replaceChild(t,e.target),t.focus(),t.addEventListener("blur",(()=>{const e=document.createElement("div");t.parentNode.replaceChild(e,t),e.textContent=t.value,b(C.name,C.todos)})),t.addEventListener("keydown",(e=>{if(13===e.keyCode){e.preventDefault();const o=document.createElement("div");o.classList.add("todo-title"),o.textContent=t.value,n.title=t.value,console.log(n),t.parentNode.replaceChild(o,t),b(C.name,C.todos)}}))}}))}))}))}w.addEventListener("click",(()=>{let e=v(q.value,[],N);h.push(e),y(h),N++,H.style.display="none",T.style.display="block",U()})),M.addEventListener("click",(()=>{H.style.display="none",T.style.display="block"})),U()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,