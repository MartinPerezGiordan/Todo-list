(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),d=t.n(a)()(o());d.push([n.id,"body, html{\n    padding: 0;\n    margin: 0;\n    display: grid;\n    width: 100vw;\n    height: 100vh;\n    align-content: space-between;\n    grid-template-rows: auto 1fr auto;\n    grid-template-columns: auto 1fr;\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    color: black;\n}\nbutton{\n    cursor: pointer;\n    background-color: transparent;\n    padding: 5px;\n    border: none;\n    border-radius: 10%;\n    margin: 0;\n    cursor: pointer;\n    font-weight: 700;\n    font-size: 16px;\n}\n\n.todo-delete-btn{\n    padding: 0px;\n    margin: 0px;\n}\n\nh2{\n    font-size: 30px;\n    padding: 0px;\n    margin: 0px;\n    margin-bottom: 20px;\n}\n.btn-add-todo{\n    margin-bottom: 20px;\n}\n\nbutton:hover{\n    background-color: #323232;\n    color: aliceblue;\n    opacity: 50%;\n\n}\n\ninput{\n    background-color: transparent;\n    border: none;\n    border-bottom: 2px solid #323232;\n    font-size: 23px;\n}\n\n.logo{\n    font-size: 35px;\n    font-weight: 700;\n    padding: 20px;\n}\n\n#header{\n    background-color: #bfece6;\n    width: 100vw;\n    grid-column: 1/3;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    z-index: 0;\n}\n\n#sidebar{\n    background-color: #3c8fee;\n    background: linear-gradient(to right, #3c8fee, #3278c9);\n    padding: 20px;\n    color: #f1fdfa;\n    \n}\n\n.project-list{\n    color: #323232;\n    display: grid;\n    grid-template-columns: auto auto;\n    gap: 5px;\n    padding: 0px;\n    \n}\n.project-list li{\n    padding: 5px;\n    color: #f1fdfa;\n    font-size: 20px;\n    font-weight: 600;\n}\n\n.project-list li:hover{\n    background-color: #323232;\n    color: aliceblue;\n    opacity: 50%;\n    border-radius: 5px;\n}\n\n#main-content{\n    color: black;\n    padding: 20px;\n    background-color: #f4fffc;\n}\n\n.project-title{\n    font-size: 2.5em;\n}\n\n.add-todo{\n    display: none;\n    flex-direction: column;\n    align-items: flex-start;\n}\n\n.add-project-form{\n    display: none;\n}\n\n.todo-task{\n    border: 1px solid rgb(41, 12, 12);\n    border-radius: 20px;\n    padding: 10px;\n    display: flex;\n    gap: 20px;\n    align-items: center;\n    background-color: rgb(153, 193, 247);\n    box-shadow: 0 5px 7px rgba(0, 0, 0, 0.3);\n    font-size: 20px;\n    margin-bottom: 20px;\n}\n\n.todo-title:hover{\n    background-color: #323232;\n    color: aliceblue;\n    opacity: 50%;\n\n}\n\n.project-btn{\n    list-style: none;\n    font-weight: 500;\n    font-size: 18px;\n    cursor: pointer;\n}\n\n.checked{\n    background-color: #2b3563;\n    text-decoration: line-through;\n}\n\n#footer {\ntext-align: center;\nwidth: 100vw;\nbackground-color: #bfece6;\ngrid-column: 1/3;\n}\n\n#footer p {\nfont-size: 14px;\nmargin: 0;\npadding: 20px;\n\n}\n\n#footer a {\ncolor: #000000;\ntext-decoration: none;\n}\n\n#footer a:hover {\ncolor: #007bff;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;IACT,aAAa;IACb,YAAY;IACZ,aAAa;IACb,4BAA4B;IAC5B,iCAAiC;IACjC,+BAA+B;IAC/B,mJAAmJ;IACnJ,YAAY;AAChB;AACA;IACI,eAAe;IACf,6BAA6B;IAC7B,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,SAAS;IACT,eAAe;IACf,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,WAAW;IACX,mBAAmB;AACvB;AACA;IACI,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;IACzB,gBAAgB;IAChB,YAAY;;AAEhB;;AAEA;IACI,6BAA6B;IAC7B,YAAY;IACZ,gCAAgC;IAChC,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,gBAAgB;IAChB,wCAAwC;IACxC,UAAU;AACd;;AAEA;IACI,yBAAyB;IACzB,uDAAuD;IACvD,aAAa;IACb,cAAc;;AAElB;;AAEA;IACI,cAAc;IACd,aAAa;IACb,gCAAgC;IAChC,QAAQ;IACR,YAAY;;AAEhB;AACA;IACI,YAAY;IACZ,cAAc;IACd,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,yBAAyB;IACzB,gBAAgB;IAChB,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,yBAAyB;AAC7B;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,iCAAiC;IACjC,mBAAmB;IACnB,aAAa;IACb,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,oCAAoC;IACpC,wCAAwC;IACxC,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;IACzB,gBAAgB;IAChB,YAAY;;AAEhB;;AAEA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,yBAAyB;IACzB,6BAA6B;AACjC;;AAEA;AACA,kBAAkB;AAClB,YAAY;AACZ,yBAAyB;AACzB,gBAAgB;AAChB;;AAEA;AACA,eAAe;AACf,SAAS;AACT,aAAa;;AAEb;;AAEA;AACA,cAAc;AACd,qBAAqB;AACrB;;AAEA;AACA,cAAc;AACd",sourcesContent:["body, html{\r\n    padding: 0;\r\n    margin: 0;\r\n    display: grid;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    align-content: space-between;\r\n    grid-template-rows: auto 1fr auto;\r\n    grid-template-columns: auto 1fr;\r\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    color: black;\r\n}\r\nbutton{\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    padding: 5px;\r\n    border: none;\r\n    border-radius: 10%;\r\n    margin: 0;\r\n    cursor: pointer;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n}\r\n\r\n.todo-delete-btn{\r\n    padding: 0px;\r\n    margin: 0px;\r\n}\r\n\r\nh2{\r\n    font-size: 30px;\r\n    padding: 0px;\r\n    margin: 0px;\r\n    margin-bottom: 20px;\r\n}\r\n.btn-add-todo{\r\n    margin-bottom: 20px;\r\n}\r\n\r\nbutton:hover{\r\n    background-color: #323232;\r\n    color: aliceblue;\r\n    opacity: 50%;\r\n\r\n}\r\n\r\ninput{\r\n    background-color: transparent;\r\n    border: none;\r\n    border-bottom: 2px solid #323232;\r\n    font-size: 23px;\r\n}\r\n\r\n.logo{\r\n    font-size: 35px;\r\n    font-weight: 700;\r\n    padding: 20px;\r\n}\r\n\r\n#header{\r\n    background-color: #bfece6;\r\n    width: 100vw;\r\n    grid-column: 1/3;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n    z-index: 0;\r\n}\r\n\r\n#sidebar{\r\n    background-color: #3c8fee;\r\n    background: linear-gradient(to right, #3c8fee, #3278c9);\r\n    padding: 20px;\r\n    color: #f1fdfa;\r\n    \r\n}\r\n\r\n.project-list{\r\n    color: #323232;\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    gap: 5px;\r\n    padding: 0px;\r\n    \r\n}\r\n.project-list li{\r\n    padding: 5px;\r\n    color: #f1fdfa;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n}\r\n\r\n.project-list li:hover{\r\n    background-color: #323232;\r\n    color: aliceblue;\r\n    opacity: 50%;\r\n    border-radius: 5px;\r\n}\r\n\r\n#main-content{\r\n    color: black;\r\n    padding: 20px;\r\n    background-color: #f4fffc;\r\n}\r\n\r\n.project-title{\r\n    font-size: 2.5em;\r\n}\r\n\r\n.add-todo{\r\n    display: none;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n}\r\n\r\n.add-project-form{\r\n    display: none;\r\n}\r\n\r\n.todo-task{\r\n    border: 1px solid rgb(41, 12, 12);\r\n    border-radius: 20px;\r\n    padding: 10px;\r\n    display: flex;\r\n    gap: 20px;\r\n    align-items: center;\r\n    background-color: rgb(153, 193, 247);\r\n    box-shadow: 0 5px 7px rgba(0, 0, 0, 0.3);\r\n    font-size: 20px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.todo-title:hover{\r\n    background-color: #323232;\r\n    color: aliceblue;\r\n    opacity: 50%;\r\n\r\n}\r\n\r\n.project-btn{\r\n    list-style: none;\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n}\r\n\r\n.checked{\r\n    background-color: #2b3563;\r\n    text-decoration: line-through;\r\n}\r\n\r\n#footer {\r\ntext-align: center;\r\nwidth: 100vw;\r\nbackground-color: #bfece6;\r\ngrid-column: 1/3;\r\n}\r\n\r\n#footer p {\r\nfont-size: 14px;\r\nmargin: 0;\r\npadding: 20px;\r\n\r\n}\r\n\r\n#footer a {\r\ncolor: #000000;\r\ntext-decoration: none;\r\n}\r\n\r\n#footer a:hover {\r\ncolor: #007bff;\r\n}"],sourceRoot:""}]);const c=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var d={};if(r)for(var c=0;c<this.length;c++){var i=this[c][0];null!=i&&(d[i]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);r&&d[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},d=[],c=0;c<n.length;c++){var i=n[c],l=r.base?i[0]+r.base:i[0],A=a[l]||0,s="".concat(l," ").concat(A);a[l]=A+1;var u=t(s),p={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=o(p,r);r.byIndex=c,e.splice(c,0,{identifier:s,updater:f,references:1})}d.push(s)}return d}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var d=0;d<a.length;d++){var c=t(a[d]);e[c].references--}for(var i=r(n,o),l=0;l<a.length;l++){var A=t(a[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}a=i}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var r={};(()=>{t.d(r,{EG:()=>F,HB:()=>J,jI:()=>P,dU:()=>$});var n=t(379),e=t.n(n),o=t(795),a=t.n(o),d=t(569),c=t.n(d),i=t(565),l=t.n(i),A=t(216),s=t.n(A),u=t(589),p=t.n(u),f=t(426),g={};g.styleTagTransform=p(),g.setAttributes=l(),g.insert=c().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=s(),e()(f.Z,g),f.Z&&f.Z.locals&&f.Z.locals;const m=function(n){localStorage.setItem("projects",JSON.stringify(n)),console.log(n);const e=document.querySelector(".project-list");e.innerHTML="",n.forEach((n=>{n.deleted||(e.innerHTML+=`<li class="project-btn" id="project${n.id}">${n.name}</li><button id="delete-project${n.id}" class="project-delete-btn">X</button>`)})),P()},b=function(n,e,t){localStorage.setItem("projects",JSON.stringify(t)),console.log(t),document.querySelector(".project-title").innerHTML=n;const r=document.querySelector(".todos");r.innerHTML="",document.querySelector(".btn-add-todo").style.display=""===n?"none":"block",e.forEach((n=>{if(!n.deleted){let e=document.createElement("div");e.classList.add("todo-task"),e.id=`todo${n.id}`,n.checked?(e.innerHTML+=`<input type="checkbox" checked="true" class="checkbox" id="checkbox${n.id}">`,e.classList.add("checked")):(e.innerHTML+=`<input type="checkbox" class="checkbox" id="checkbox${n.id}">`,e.classList.remove("checked")),e.innerHTML+=`<div class="todo-title" id="todo-title${n.id}">${n.title}</div>`,e.innerHTML+=`<div>${n.dueDate}</div>`,e.innerHTML+=`<button class="todo-delete-btn" id="deleteTodo${n.id}">X</button>`,r.appendChild(e)}})),F(),J(),$()},C=function(n,e,t){return{title:n,dueDate:e,checked:!1,id:t,deleted:!1}},y=function(n,e,t){return{name:n,todos:e,id:t,deleted:!1}},h={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let v;const I=new Uint8Array(16);function x(){if(!v&&(v="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!v))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return v(I)}const B=[];for(let n=0;n<256;++n)B.push((n+256).toString(16).slice(1));const k=function(n,e,t){if(h.randomUUID&&!e&&!n)return h.randomUUID();const r=(n=n||{}).random||(n.rng||x)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,e){t=t||0;for(let n=0;n<16;++n)e[t+n]=r[n];return e}return function(n,e=0){return(B[n[e+0]]+B[n[e+1]]+B[n[e+2]]+B[n[e+3]]+"-"+B[n[e+4]]+B[n[e+5]]+"-"+B[n[e+6]]+B[n[e+7]]+"-"+B[n[e+8]]+B[n[e+9]]+"-"+B[n[e+10]]+B[n[e+11]]+B[n[e+12]]+B[n[e+13]]+B[n[e+14]]+B[n[e+15]]).toLowerCase()}(r)};let E=[];console.log(E);let j=JSON.parse(localStorage.getItem("projects"));E=null!=j?j:[y("Nada",[C("Make dinner","15/6/2023",540)],500)];let S=y("",[]);console.log(S),console.log(j);for(let n=0;n<E.length;n++)if(!E[n].deleted){S=E[n],console.log(E[n]);break}!function(){const n=document.createElement("div");n.id="header",n.innerHTML='<div class="logo">To-do-List</div>';const e=document.createElement("div");e.id="sidebar",e.innerHTML='<h2>Projects</h2><button class="new-project-btn">New Project</button><div class="add-project-form"><input type="text" class="project-name-input" maxlength="15" placeholder="Project name"><button class="add-project">+ Add</button><button class="cancel-project">Cancel</button></div>',e.innerHTML+='<div class="projects"><ul class="project-list"></ul></div>';const t=document.createElement("div");t.classList.add("add-todo"),t.innerHTML='<label for="title">Title:</label><input type="text" maxlength="150" id="title" name="title" required>',t.innerHTML+='<label for="dueDate">Due Date:</label><input type="date" id="dueDate" name="dueDate" required>',t.innerHTML+='<button class="add">+ Add</button>',t.innerHTML+='<button class="cancel">Cancel</button>';const r=document.createElement("div");r.id="main-content",r.innerHTML+='<h2 class="project-title">List</h2>',r.appendChild(t),r.innerHTML+='<button class="btn-add-todo">Add To-do</button><div class="todos"></div>';const o=document.createElement("div");o.id="footer",o.innerHTML='  <p>Designed and developed by <a href="https://github.com/MartinPerezGiordan" target="_blank" rel="noopener noreferrer">Martin Perez</a></p>',document.body.appendChild(n),document.body.appendChild(e),document.body.appendChild(r),document.body.appendChild(o)}(),m(E),b(S.name,S.todos,E);const w=document.querySelector("#title"),L=(document.querySelector("#description"),document.querySelector("#dueDate")),T=document.querySelector(".add"),M=document.querySelector(".btn-add-todo"),Y=document.querySelector(".add-todo"),z=document.querySelector(".cancel"),q=document.querySelector(".new-project-btn"),H=document.querySelector(".add-project"),U=document.querySelector(".cancel-project"),D=document.querySelector(".add-project-form"),Z=document.querySelector(".project-name-input");let N=k();T.addEventListener("click",(()=>{let n=C(w.value,L.value,N);N=k(),S.todos.push(n),b(S.name,S.todos,E),Y.style.display="none",M.style.display="block",w.value="",L.value=""})),M.addEventListener("click",(()=>{Y.style.display="flex",M.style.display="none"})),z.addEventListener("click",(()=>{Y.style.display="none",M.style.display="block",w.value="",L.value=""})),q.addEventListener("click",(()=>{D.style.display="block",q.style.display="none"}));let O=k();function R(){document.querySelectorAll(".project-btn").forEach((n=>{n.addEventListener("click",(n=>{S=n.target.id,E.forEach((e=>{n.target.id.substring(7)==e.id&&(S=e)})),b(S.name,S.todos,E)}))}))}function $(){document.querySelectorAll(".todo-delete-btn").forEach((n=>{n.addEventListener("click",(n=>{S.todos.forEach((e=>{n.target.id.substring(10)==e.id&&(e.deleted=!0),b(S.name,S.todos,E)}))}))}))}function P(){document.querySelectorAll(".project-delete-btn").forEach((n=>{n.addEventListener("click",(n=>{E.forEach((e=>{n.target.id.substring(14)==e.id&&(e.deleted=!0,e.name==S.name?(m(E),b("",[],E)):(m(E),b(S.name,S.todos,E)))}))}))}))}function J(){document.querySelectorAll(".todo-title").forEach((n=>{n.addEventListener("click",(n=>{S.todos.forEach((e=>{if(n.target.id.substring(10)==e.id){let t=document.createElement("input");t.value=n.target.textContent,n.target.parentNode.replaceChild(t,n.target),t.focus(),t.addEventListener("blur",(()=>{const n=document.createElement("div");t.parentNode.replaceChild(n,t),n.textContent=t.value,b(S.name,S.todos,E)})),t.addEventListener("keydown",(n=>{if(13===n.keyCode){n.preventDefault();const r=document.createElement("div");r.classList.add("todo-title"),r.textContent=t.value,e.title=t.value,t.parentNode.replaceChild(r,t),b(S.name,S.todos,E)}}))}}))}))}))}function F(){document.querySelectorAll(".checkbox").forEach((n=>{n.addEventListener("click",(n=>{S.todos.forEach((e=>{n.target.id.substring(8)==e.id&&(e.checked?e.checked=!1:e.checked=!0,b(S.name,S.todos,E))}))}))}))}H.addEventListener("click",(()=>{let n=y(Z.value,[],O);E.push(n),m(E),O=k(),D.style.display="none",q.style.display="block",Z.value="",R()})),U.addEventListener("click",(()=>{D.style.display="none",q.style.display="block",Z.value=""})),R()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,