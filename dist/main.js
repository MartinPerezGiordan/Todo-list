(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>d});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,"body, html{\n    padding: 0;\n    margin: 0;\n    display: grid;\n    width: 100vw;\n    height: 100vh;\n    align-content: space-between;\n    grid-template-rows: auto 1fr auto;\n    grid-template-columns: auto 1fr;\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    color: azure;\n}\n\n.logo{\n    font-size: 25px;\n    font-weight: 700;\n    padding: 20px;\n}\n\n#header{\n    background-color: rgb(167, 138, 138);\n    width: 100vw;\n    grid-column: 1/3;\n}\n\n#sidebar{\n    background-color: rgb(180, 165, 165);\n    padding: 20px;\n}\n\n#main-content{\n    color: black;\n    padding: 20px;\n}\n\n.add-todo{\n    display: none;\n    flex-direction: column;\n    align-items: flex-start;\n}\n\n.add-project-form{\n    display: none;\n}\n\n#footer{\n    height: 100px;\n    width: 100vw;\n    background-color: rgb(167, 138, 138);\n    grid-column: 1/3;\n}\n\n.todo-task{\n    border: 1px solid rgb(41, 12, 12);\n    border-radius: 20px;\n    padding: 20px;\n    display: flex;\n    gap: 20px;\n    align-items: center;\n    background-color: beige;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;IACT,aAAa;IACb,YAAY;IACZ,aAAa;IACb,4BAA4B;IAC5B,iCAAiC;IACjC,+BAA+B;IAC/B,mJAAmJ;IACnJ,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,oCAAoC;IACpC,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,oCAAoC;IACpC,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,oCAAoC;IACpC,gBAAgB;AACpB;;AAEA;IACI,iCAAiC;IACjC,mBAAmB;IACnB,aAAa;IACb,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,uBAAuB;AAC3B",sourcesContent:["body, html{\r\n    padding: 0;\r\n    margin: 0;\r\n    display: grid;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    align-content: space-between;\r\n    grid-template-rows: auto 1fr auto;\r\n    grid-template-columns: auto 1fr;\r\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    color: azure;\r\n}\r\n\r\n.logo{\r\n    font-size: 25px;\r\n    font-weight: 700;\r\n    padding: 20px;\r\n}\r\n\r\n#header{\r\n    background-color: rgb(167, 138, 138);\r\n    width: 100vw;\r\n    grid-column: 1/3;\r\n}\r\n\r\n#sidebar{\r\n    background-color: rgb(180, 165, 165);\r\n    padding: 20px;\r\n}\r\n\r\n#main-content{\r\n    color: black;\r\n    padding: 20px;\r\n}\r\n\r\n.add-todo{\r\n    display: none;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n}\r\n\r\n.add-project-form{\r\n    display: none;\r\n}\r\n\r\n#footer{\r\n    height: 100px;\r\n    width: 100vw;\r\n    background-color: rgb(167, 138, 138);\r\n    grid-column: 1/3;\r\n}\r\n\r\n.todo-task{\r\n    border: 1px solid rgb(41, 12, 12);\r\n    border-radius: 20px;\r\n    padding: 20px;\r\n    display: flex;\r\n    gap: 20px;\r\n    align-items: center;\r\n    background-color: beige;\r\n}"],sourceRoot:""}]);const d=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(i[c]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);r&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),n.push(s))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],d=0;d<e.length;d++){var c=e[d],l=r.base?c[0]+r.base:c[0],s=a[l]||0,u="".concat(l," ").concat(s);a[l]=s+1;var p=t(u),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(A);else{var m=o(A,r);r.byIndex=d,n.splice(d,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var d=t(a[i]);n[d].references--}for(var c=r(e,o),l=0;l<a.length;l++){var s=t(a[l]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}a=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),a=t(569),i=t.n(a),d=t(565),c=t.n(d),l=t(216),s=t.n(l),u=t(589),p=t.n(u),A=t(426),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=s(),n()(A.Z,m),A.Z&&A.Z.locals&&A.Z.locals;const f=function(e){const n=document.querySelector(".project-list");n.innerHTML="",e.forEach((e=>{n.innerHTML+=`<li>${e.name}</li>`}))},y=function(e){const n=document.querySelector(".todos");n.innerHTML="",e.forEach((e=>{let t=document.createElement("div");t.classList.add("todo-task"),t.id=`todo${e.id}`,t.innerHTML+=`<input type="checkbox" id="checkbox${e.id}">`,t.innerHTML+=`<label for="checkbox${e.id}">finished</label>`,t.innerHTML+=`<h3>${e.title}</h3>`,t.innerHTML+=`<p>${e.description}</p>`,t.innerHTML+=`<p>${e.dueDate}</p>`,t.innerHTML+=`<div>${e.priority}</div>`,n.appendChild(t)}))},b=function(e,n){return{name:e,todos:n}};let v=["Work","Study","Gym"],g=["hola"];!function(){const e=document.createElement("div");e.id="header",e.innerHTML='<div class="logo">To-do-List</div>';const n=document.createElement("div");n.id="sidebar",n.innerHTML='<h2>Projects</h2><button class="new-project-btn">New Project</button><div class="add-project-form"><input type="text" class="project-name-input" placeholder="Project name"><button class="add-project">+ Add</button><button class="cancel-project">Cancel</button></div>',n.innerHTML+='<div class="projects"><ul class="project-list"></ul></div>';const t=document.createElement("div");t.classList.add("add-todo"),t.innerHTML='<label for="title">Title:</label><input type="text" id="title" name="title" required>',t.innerHTML+='<label for="description">Description:</label><textarea id="description" name="description" required></textarea>',t.innerHTML+='<label for="dueDate">Due Date:</label><input type="date" id="dueDate" name="dueDate" required>',t.innerHTML+='<label for="priority">Priority:</label><select id="priority" name="priority"><option value="high">High</option><option value="medium">Medium</option><option value="low">Low</option></select>',t.innerHTML+='<button class="add">+ Add</button>',t.innerHTML+='<button class="cancel">Cancel</button>';const r=document.createElement("div");r.id="main-content",r.innerHTML+="<h2>List</h2>",r.appendChild(t),r.innerHTML+='<button class="btn-add-todo">Add To-do</button><div class="todos"></div>';const o=document.createElement("div");o.id="footer",document.body.appendChild(e),document.body.appendChild(n),document.body.appendChild(r),document.body.appendChild(o)}(),f(v),y(g);const h=document.querySelector("#title"),C=document.querySelector("#description"),I=document.querySelector("#dueDate"),x=document.querySelector("#priority"),B=document.querySelector(".add"),L=document.querySelector(".btn-add-todo"),S=document.querySelector(".add-todo"),T=document.querySelector(".cancel"),k=document.querySelector(".new-project-btn"),M=document.querySelector(".add-project"),j=document.querySelector(".cancel-project"),w=document.querySelector(".add-project-form"),E=document.querySelector(".project-name-input");let H=0;B.addEventListener("click",(()=>{let e=function(e,n,t,r,o,a){let i=!0;return{title:e,description:n,dueDate:t,priority:r,markDone:()=>{i=!i},getDoneValue:()=>i,id:a}}(h.value,C.value,I.value,x.value,0,H);H++,g.push(e),y(g),S.style.display="none",L.style.display="block",h.value="",C.value="",I.value=""})),L.addEventListener("click",(()=>{S.style.display="flex",L.style.display="none"})),T.addEventListener("click",(()=>{S.style.display="none",L.style.display="block"})),k.addEventListener("click",(()=>{w.style.display="block",k.style.display="none"})),M.addEventListener("click",(()=>{let e=b(E.value);v.push(e),f(v),w.style.display="none",k.style.display="block"})),j.addEventListener("click",(()=>{w.style.display="none",k.style.display="block"}));let q=b("deafult",g);v.push(q)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,